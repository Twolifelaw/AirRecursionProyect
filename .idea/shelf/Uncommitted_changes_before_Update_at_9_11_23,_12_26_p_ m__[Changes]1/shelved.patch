Index: src/main/java/Cliente/modelo/Serializacion/GestionAdministradores.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Cliente.modelo.Serializacion;\n\nimport Cliente.modelo.objetos.Administrador;\nimport Cliente.modelo.objetos.Cliente;\n\nimport java.io.*;\nimport java.util.ArrayList;\n\n\n/**\n * Serializa los datos ingresados del administrador de forma que se puedan guardar en el archivo.\n */\npublic class GestionAdministradores {\n\n    public static void serializarAdinistrador(String nombreArchivo, ArrayList<Administrador> nuevoCliente) {\n        ArrayList<Administrador> listaClientes = deserializarObjetos(nombreArchivo); // Cargamos la lista existente\n        if (listaClientes == null) {\n            listaClientes = new ArrayList<>(); // Si no hay datos en el archivo, creamos una nueva lista\n        }\n        listaClientes.addAll(nuevoCliente); // Agregamos los nuevos elementos\n\n        try (ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(nombreArchivo))) {\n            out.writeObject(listaClientes); // Escribimos la lista completa en el archivo\n            System.out.println(\"Objeto serializado y guardado en \" + nombreArchivo);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    /**\n     * Deserializa los datos del administrador para poderlos usar en las diferentes condiciones.\n     * @param nombreArchivo\n     * @return null\n     */\n\n    public static ArrayList<Administrador> deserializarObjetos(String nombreArchivo) {\n        try (ObjectInputStream in = new ObjectInputStream(new FileInputStream(nombreArchivo))) {\n            return (ArrayList<Administrador>) in.readObject();\n        } catch (IOException | ClassNotFoundException e) {\n            // Maneja las excepciones adecuadamente si el archivo no existe o no se puede leer\n            e.printStackTrace(); // Asegúrate de manejar la excepción de forma adecuada\n            return null;\n        }\n    }\n\n    /**\n     *\n     * @param nombreArchivo\n     * @return\n     */\n\n    public static ArrayList<Administrador> deserializarAdministradorDesdeArchivo(String nombreArchivo) {\n        ArrayList<Administrador> listaClientes = new ArrayList<>();\n\n        try (ObjectInputStream in = new ObjectInputStream(new FileInputStream(nombreArchivo))) {\n            ArrayList<Administrador> clientes = (ArrayList<Administrador>) in.readObject();\n            listaClientes.addAll(clientes);\n            System.out.println(\"Clientes deserializados desde \" + nombreArchivo);\n        } catch (EOFException e) {\n            // Se lanza EOFException al llegar al final del archivo\n            System.out.println(\"Fin del archivo \" + nombreArchivo);\n        } catch (IOException | ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n\n        return listaClientes;\n    }\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Cliente/modelo/Serializacion/GestionAdministradores.java b/src/main/java/Cliente/modelo/Serializacion/GestionAdministradores.java
--- a/src/main/java/Cliente/modelo/Serializacion/GestionAdministradores.java	
+++ b/src/main/java/Cliente/modelo/Serializacion/GestionAdministradores.java	
@@ -19,6 +19,7 @@
         }
         listaClientes.addAll(nuevoCliente); // Agregamos los nuevos elementos
 
+
         try (ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(nombreArchivo))) {
             out.writeObject(listaClientes); // Escribimos la lista completa en el archivo
             System.out.println("Objeto serializado y guardado en " + nombreArchivo);
